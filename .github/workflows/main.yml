name: Docker CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: DOCKER

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Optional: Create a shared .env file for local development or Docker Compose
      - name: Create .env file
        run: |
          cp ./donatio-django/.env.example ./donatio-django/.env
          echo "GOOGLE_APP_PASSWORD=${{ secrets.GOOGLE_APP_PASSWORD }}" >> ./donatio-django/.env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> ./donatio-django/.env
          echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> ./donatio-chatbot/.env

      - name: Create .env file
        run: |
          echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> ./donatio-chatbot/.env

      - name: Build Django Backend Image
        run: |
          docker build \
            --build-arg GOOGLE_APP_PASSWORD="${{ secrets.GOOGLE_APP_PASSWORD }}" \
            --build-arg GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}" \
            -t ${{ secrets.DOCKER_USERNAME }}/donatio:backend_latest ./donatio-django

      - name: Build Chatbot Image
        run: |
          docker build \
            --build-arg GROQ_API_KEY="${{ secrets.GROQ_API_KEY }}" \
            -t ${{ secrets.DOCKER_USERNAME }}/donatio:chatbot_latest ./donatio-chatbot

      - name: Push All Images to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/donatio:backend_latest
          docker push ${{ secrets.DOCKER_USERNAME }}/donatio:chatbot_latest

      # Optional: Install docker-compose if you want to run containers here
      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y

      - name: Run Containers
        run: |
          docker compose -f ./docker-compose.yml up -d
